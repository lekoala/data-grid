/**
 * Data Grid Web Component v2.0.13
 * https://github.com/lekoala/data-grid
 */
@keyframes dataGridShow {
  0% {
    opacity: 1;
  }
  100% {
    opacity: 0.5;
  }
}
data-grid {
  --padding: 0.5rem;
  --padding-x: 0.75rem;
  --padding-y: 0.5rem;
  --padding-y-header: 0.75rem;
  --padding-half: calc(var(--padding) / 2);
  --color-rgb: var(--bs-primary-rgb, 13, 110, 253);
  --color: rgb(var(--color-rgb));
  --highlight-color: #fffcee;
  --selected-bgcolor: var(--bs-primary-bg-subtle, #cfe2ff);
  --body-background: var(--bs-table-bg, #fff);
  --striped-background: rgba(0, 0, 0, 0.05);
  --header-background: var(--bs-gray-200, #e9ecef);
  --header-color: var(--bs-dark, #212529);
  --input-background: var(--bs-body-bg, #ffffff);
  --input-border-color: var(--bs-border-color, #e9ecef);
  --btn-background: var(--bs-body-bg, #ffffff);
  --btn-color: var(--color);
  --btn-border-color: var(--bs-border-color, #e9ecef);
  --body-bg: var(--bs-body-bg, #212529);
  --body-color: var(--bs-body-color, #212529);
  --icon-scale: 1;
  --border-radius: 0.25rem;
  --row-border-color: #f2f2f2;
  --responsive-width: 60%;
  --black: var(--bs-black, #000);
  --white: var(--bs-white, #fff);
  --gray: var(--bs-gray, #6c757d);
  --gray-dark: var(--bs-gray-dark, #343a40);
  --gray-100: var(--bs-gray-100, #f8f9fa);
  --gray-200: var(--bs-gray-200, #e9ecef);
  --gray-300: var(--bs-gray-300, #dee2e6);
  --gray-400: var(--bs-gray-400, #ced4da);
  --gray-500: var(--bs-gray-500, #adb5bd);
  --gray-600: var(--bs-gray-600, #6c757d);
  --gray-700: var(--bs-gray-700, #495057);
  --gray-800: var(--bs-gray-800, #343a40);
  --gray-900: var(--bs-gray-900, #212529);
  display: block;
  min-height: 6rem;
  position: relative;
}
data-grid {
  --scroller-color: 0, 0%;
  --scroller-color-lightness: 80%;
  --scroller-hover-factor: 0.8;
  --scroller-thumb: hsl(var(--scroller-color), var(--scroller-color-lightness));
  /* Replicate hover for webkit */
  --scroller-thumb-hover: hsl(var(--scroller-color), calc(var(--scroller-color-lightness) * var(--scroller-hover-factor)));
  --scroller-background: transparent;
  scrollbar-color: var(--scroller-thumb) var(--scroller-background);
  scrollbar-width: thin;
}
data-grid::-webkit-scrollbar {
  width: 8px;
  height: 8px;
}
data-grid::-webkit-scrollbar-track {
  background: transparent;
}
data-grid::-webkit-scrollbar-thumb {
  background: var(--scroller-thumb);
}
data-grid::-webkit-scrollbar-thumb:hover {
  background: var(--scroller-thumb-hover);
}
data-grid > table[role=grid] tr.dg-head-columns:is(:empty, :has(> :first-child:not([scope=col]))) {
  display: none;
}
data-grid img {
  border: none;
  height: auto;
  max-width: 100%;
  vertical-align: middle;
}
data-grid [hidden] {
  display: none;
}
data-grid table {
  display: table;
  table-layout: fixed;
  width: 100%;
  max-width: 100%;
  white-space: normal;
  background: var(--body-background);
}
data-grid thead,
data-grid tfoot {
  background-color: var(--header-background);
  color: var(--header-color);
}
data-grid.dg-loading:not(.dg-initialized) thead,
data-grid.dg-loading:not(.dg-initialized) tfoot {
  background: none;
}
data-grid.dg-loading tbody {
  animation-name: dataGridShow;
  animation-timing-function: ease-in;
  animation-fill-mode: forwards;
  animation-duration: 0.3s;
  pointer-events: none;
}
data-grid.dg-loading:not(:has(th)) tfoot {
  display: none;
}
data-grid tr {
  position: relative;
}
data-grid th,
data-grid td {
  empty-cells: show;
  padding: var(--padding-y) var(--padding-x);
  text-align: left;
}
data-grid th[tabindex],
data-grid td[tabindex] {
  outline: none;
  word-break: normal;
}
data-grid th {
  font-weight: bold;
  padding: var(--padding-y-header) var(--padding-x);
}
data-grid th,
data-grid td {
  position: relative;
  overflow: hidden;
  text-align: left;
  text-overflow: ellipsis;
  white-space: nowrap;
}
data-grid th.dg-wrap,
data-grid td.dg-wrap {
  white-space: normal;
  word-break: break-all;
}
data-grid .dg-expandable {
  cursor: pointer;
}
data-grid .dg-expandable.dg-expanded td {
  white-space: normal;
  word-break: break-all;
}
data-grid .dg-selectable {
  font-size: 1em;
}
data-grid .dg-selectable label {
  display: flex;
  align-items: center;
  margin: 0;
}
data-grid .dg-clickable-cell {
  margin: 0;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
}
data-grid[sticky] table thead,
data-grid[sticky] table tfoot {
  z-index: 2;
  position: sticky;
  margin: 0;
  border: 0;
}
data-grid[sticky] table thead {
  inset-block-start: -1px;
}
data-grid[sticky] table tfoot {
  inset-block-end: -1px;
}
data-grid .dg-nav-icon,
data-grid .dg-skip-icon {
  width: 22px;
  height: 22px;
  box-sizing: border-box;
  position: absolute;
  display: block;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(var(--icon-scale, 1));
}
data-grid .dg-nav-icon:before, data-grid .dg-nav-icon:after,
data-grid .dg-skip-icon:before,
data-grid .dg-skip-icon:after {
  content: "";
  display: block;
  box-sizing: border-box;
  position: absolute;
}
data-grid .dg-nav-icon::before {
  width: 0;
  height: 10px;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 6px solid;
  top: 6px;
  left: 9px;
}
data-grid .dg-skip-icon::before {
  width: 3px;
  height: 10px;
  background: currentColor;
  top: 6px;
  left: 14px;
}
data-grid .dg-skip-icon::after {
  width: 0;
  height: 10px;
  border-top: 5px solid transparent;
  border-bottom: 5px solid transparent;
  border-left: 6px solid;
  top: 6px;
  left: 7px;
}
data-grid .dg-rotate {
  transform: rotate(-180deg);
}
data-grid button {
  background-color: var(--btn-background);
  border: solid 1px var(--btn-border-color);
  border-radius: var(--border-radius);
  color: var(--body-color);
  height: 2rem;
  margin: 0 0.2rem;
  padding: 0 0.5rem;
  pointer-events: all;
  text-align: center;
  cursor: pointer;
}
data-grid button:hover {
  opacity: 0.7;
}
data-grid button:disabled:hover {
  background-color: inherit;
  border-color: inherit;
}
data-grid input[type=checkbox] {
  margin: 0;
  padding: 0;
}
data-grid input:not([type=checkbox], [type=radio]),
data-grid select {
  background-color: var(--input-background, "#fff");
  color: currentColor;
  box-sizing: border-box;
  border: 1px solid var(--input-border-color, "#f0f0f0");
  border-radius: var(--border-radius);
  height: 2rem;
  margin: 0 0.2rem;
  padding: 0 var(--padding);
  max-width: none;
}
data-grid input:not([type=checkbox]):focus,
data-grid select:focus,
data-grid button:focus {
  box-shadow: 0 0 0 var(--padding-half) rgba(var(--color-rgb), 0.25);
  outline: 0;
}
data-grid input:not([type=checkbox])[disabled], data-grid input:not([type=checkbox]):disabled,
data-grid select[disabled],
data-grid select:disabled,
data-grid button[disabled],
data-grid button:disabled {
  opacity: 0.35;
  pointer-events: none;
}
data-grid thead tr:nth-child(2) th {
  padding: 0 2px 0 0;
  background-color: transparent;
}
data-grid thead tr:nth-child(2) th > * {
  width: 100%;
  border-radius: 0;
  margin: 0;
}
data-grid thead tr:nth-child(2) th input:focus {
  box-shadow: inset 0px 0px 0px 1px var(--color);
}
data-grid tbody td.dg-editable-col {
  padding: 0;
  height: 0;
}
data-grid tbody td input.dg-editable {
  width: 100%;
  background: transparent;
  border: 0;
  border-radius: 0;
  margin: 0;
  box-shadow: none;
  height: 100%;
}
data-grid tbody td input.dg-editable:focus {
  box-shadow: inset 0px 0px 0px 1px var(--color);
}
data-grid tbody tr:has(.dg-selectable [type=radio]:checked) {
  background-color: var(--selected-bgcolor);
}
data-grid.dg-empty tbody {
  height: 4rem;
  position: relative;
}
data-grid.dg-empty tbody:before {
  position: absolute;
  top: 50%;
  left: 50%;
  content: attr(data-empty);
  transform: translate(-50%, -50%);
  opacity: 0.5;
  font-size: 1.5rem;
  text-align: center;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  width: 90%;
}
data-grid.dg-empty tr.dg-fake-row {
  height: 4rem;
  border: none;
}
data-grid.dg-empty.dg-network-error table {
  color: #842029;
  background-color: #f8d7da;
  border: 1px solid #f5c2c7;
}
data-grid.dg-empty.dg-network-error tbody {
  height: auto;
}
data-grid.dg-empty.dg-network-error tbody:before {
  font-size: 1.2rem;
}
data-grid.dg-empty.dg-network-error tbody tr:not(.dg-fake-row) {
  display: none;
}
data-grid tbody tr {
  border-bottom: solid 1px var(--row-border-color);
}
data-grid tbody tr:nth-child(even) {
  background-color: var(--striped-background);
}
data-grid tbody tr:hover {
  background-color: var(--highlight-color) !important;
}
data-grid tbody tr:focus {
  background-color: var(--highlight-color) !important;
  border-bottom-color: var(--highlight-color) !important;
  outline: none;
}
data-grid tfoot {
  min-width: 280px;
}
data-grid tfoot td {
  padding: var(--padding-y-header) var(--padding-x);
}
data-grid tfoot .dg-page-nav {
  display: flex;
  align-items: center;
  /*min-width: 160px;*/
}
data-grid tfoot .dg-input-page {
  width: 4rem;
}
data-grid tfoot .dg-footer {
  display: flex;
  align-items: center;
  flex-direction: row;
  justify-content: space-between;
}
data-grid tfoot .dg-pagination {
  display: flex;
  text-align: center;
}
data-grid tfoot .dg-pagination button {
  position: relative;
  width: 2rem;
}
data-grid tfoot .dg-meta {
  /*min-width: 160px;*/
  text-align: right;
}
data-grid tfoot.dg-footer-compact .dg-meta {
  display: none;
}
data-grid tfoot.dg-footer-compact .dg-input-page {
  display: none;
}
data-grid [aria-sort] {
  cursor: pointer;
  padding-right: 1.5rem;
}
data-grid [aria-sort=none]:after,
data-grid [aria-sort=none]:before,
data-grid [aria-sort=ascending]:before,
data-grid [aria-sort=descending]:after {
  right: 0.5rem;
  top: calc(50% - 0.5rem);
  border: solid transparent;
  content: " ";
  height: 0;
  width: 0;
  position: absolute;
  border-color: rgba(0, 0, 0, 0);
  border-width: 0.25rem;
  margin-left: -0.25rem;
}
data-grid [aria-sort=none]:before {
  border-bottom-color: currentColor;
  opacity: 0.25;
  top: calc(50% - 0.6rem);
}
data-grid [aria-sort=none]:after {
  border-top-color: currentColor;
  opacity: 0.25;
  bottom: calc(50% - 0.5rem);
  top: auto;
}
data-grid [aria-sort=ascending]:before {
  border-bottom-color: var(--body-color);
  opacity: 0.75;
}
data-grid [aria-sort=descending]:after {
  border-top-color: var(--body-color);
  opacity: 0.75;
  bottom: calc(50% - 0.5rem);
  top: auto;
}

[data-bs-theme=dark] data-grid {
  --scroller-color-lightness: 20%;
  --highlight-color: #43423e;
  --selected-bgcolor: var(--bs-primary-bg-subtle, #031633);
  --body-background: #212529;
  --striped-background: #2c3034;
  --header-background: var(--bs-gray-800, #34373b);
  --header-color: var(--bs-light, #e9ecef);
  --body-color: var(--bs-body-color, #494e53);
  --row-border-color: var(--bs-gray-900, #212325);
}

data-grid[dir=rtl] th,
data-grid[dir=rtl] td {
  text-align: right;
}
data-grid[dir=rtl] [aria-sort] {
  padding-left: 1rem;
  padding-right: 0.5rem;
}
data-grid[dir=rtl] [aria-sort=none]:after,
data-grid[dir=rtl] [aria-sort=none]:before,
data-grid[dir=rtl] [aria-sort=ascending]:before,
data-grid[dir=rtl] [aria-sort=descending]:after {
  left: 0.75rem;
  right: auto;
}
data-grid[dir=rtl] tfoot .dg-meta {
  text-align: left;
}

data-grid .dg-menu {
  position: absolute;
  z-index: 3;
  background: var(--body-bg);
  list-style: none;
  max-width: 150px;
  margin: 0;
  padding: var(--padding);
  box-shadow: 0 0 1rem rgba(0, 0, 0, 0.25);
  border-radius: var(--border-radius);
}
data-grid .dg-menu li {
  margin: 0;
  padding: 0;
}
data-grid .dg-menu label {
  display: flex;
  align-items: center;
  margin-bottom: 0.25em;
}
data-grid .dg-menu input {
  margin-right: 0.5em;
}

data-grid .dg-actions {
  text-overflow: initial;
  width: 100px;
  text-align: right;
  white-space: nowrap !important;
}
data-grid .dg-actions button {
  margin: 0;
}
data-grid .dg-actions button + button {
  margin-left: 0.25rem;
}
data-grid .dg-actions .dg-actions-toggle {
  display: none;
  width: calc(100px - var(--padding-x) * 2);
}
data-grid .dg-actions.dg-actions-1 {
  width: 100%;
}
data-grid .dg-actions.dg-actions-2 button {
  width: calc(50% - 0.25rem);
}
data-grid .dg-actions.dg-actions-more button {
  display: none;
}
data-grid .dg-actions.dg-actions-more button.dg-actions-toggle {
  display: inline-block;
}
data-grid .dg-actions.dg-actions-expand {
  position: absolute;
  right: 0;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  width: 100%;
  height: 100%;
}
data-grid .dg-actions.dg-actions-expand.dg-actions-more {
  width: 100%;
}
data-grid .dg-actions.dg-actions-expand.dg-actions-more button {
  display: inline-block;
}
data-grid tr.dg-actionable {
  cursor: pointer;
}
data-grid tr.dg-actionable:hover td {
  background-color: var(--highlight-color);
}

data-grid .dg-resizer {
  position: absolute;
  top: 0;
  right: 0;
  width: 6px;
  z-index: 2;
  cursor: col-resize;
  -webkit-user-select: none;
     -moz-user-select: none;
          user-select: none;
}
data-grid .dg-resizer:before {
  content: "";
  display: block;
  position: absolute;
  top: var(--padding-y-header);
  height: 1.5rem;
  right: 0;
  width: 2px;
  background: var(--body-color);
  opacity: 0.2;
}
data-grid .dg-resizer:hover:before {
  opacity: 0.6;
}
data-grid .dg-resizer.dg-resizer-active {
  border-right: 1px dashed var(--color);
}
data-grid .dg-resizer.dg-resizer-active:before {
  opacity: 0.6;
}

data-grid .dg-responsive-toggle {
  padding: 0;
  text-align: center;
}
data-grid .dg-responsive-child-row > td {
  padding: 0;
}
data-grid .dg-responsive-table {
  table-layout: auto;
  border: 0;
}
data-grid .dg-responsive-table td,
data-grid .dg-responsive-table th {
  white-space: normal;
}
data-grid .dg-responsive-table th {
  max-width: 40%;
}

@media only screen and (max-width: 767px) {
  data-grid[responsive] .dg-resizer {
    display: none;
  }
  data-grid[responsive] .dg-meta {
    display: none;
  }
  data-grid[responsive] .dg-input-page {
    display: none;
  }
  data-grid[responsive] table,
  data-grid[responsive] tbody,
  data-grid[responsive] tfoot,
  data-grid[responsive] th,
  data-grid[responsive] td,
  data-grid[responsive] tr:not([hidden]) {
    display: block;
  }
  data-grid[responsive] thead {
    display: flex;
    border-bottom: 2px solid var(--header-background);
  }
  data-grid[responsive] thead > tr {
    flex-grow: 1;
  }
  data-grid[responsive] thead th {
    width: auto;
  }
  data-grid[responsive] tbody tr {
    padding: 0;
    border: 1px solid var(--header-background);
  }
  data-grid[responsive] tbody td {
    border: none;
    border-bottom: 1px solid var(--row-border-color);
    position: relative;
    padding-left: calc(100% - var(--responsive-width) - var(--padding) * 2);
  }
  data-grid[responsive] tbody td:last-child {
    border: 0;
  }
  data-grid[responsive] tbody td:before {
    position: absolute;
    top: 0;
    left: 0;
    padding: var(--padding);
    width: calc(100% - var(--responsive-width) - var(--padding) * 4);
    content: attr(data-name);
    display: block;
    font-weight: bold;
    background-color: var(--header-background);
  }
  data-grid[responsive] tbody td[role=gridcell] {
    padding-left: calc(100% - var(--responsive-width) - var(--padding) * 4 + 0.5rem);
  }
  data-grid[responsive] .dg-selectable {
    height: 28px;
    margin: 2px 1px 2px;
  }
  data-grid[responsive] td.dg-selectable::before, data-grid[responsive] td.dg-actions::before {
    padding: 0;
  }
  data-grid[responsive] td.dg-selectable label {
    padding: 5px;
  }
  data-grid[responsive] td[role=gridcell] {
    min-height: 35px;
    width: auto;
  }
  data-grid[responsive] td[data-name]::before {
    height: 100%;
  }
  data-grid[responsive] td.dg-actions {
    padding-left: inherit;
    width: inherit;
  }
  data-grid[responsive] .dg-actions button {
    width: inherit !important;
  }
  data-grid[responsive] tr.dg-head-columns {
    padding: 0;
    width: calc(100% - var(--responsive-width) - var(--padding) * 4);
  }
  data-grid[responsive] tr.dg-head-columns th[role="columnheader button"] {
    padding: 0.36em 1.3em 0.36em 0.75em;
  }
  data-grid[responsive] tr.dg-head-filters {
    background: transparent;
    vertical-align: top;
    padding: 0;
    width: calc(100% - (100% - var(--responsive-width) - var(--padding) * 4));
  }
  data-grid[responsive] .dg-head-filters th input:not([type=checkbox], [type=radio]) {
    height: 2.25em;
  }
  data-grid[responsive] .dg-head-filters th.dg-selectable {
    background: transparent;
  }
  data-grid[responsive] .dg-head-filters th.dg-selectable label::before {
    content: "Column Filters";
  }
  data-grid[responsive] tfoot .dg-page-nav {
    min-width: revert;
  }
  data-grid[data-responsive=true] tfoot .dg-page-nav {
    min-width: revert;
  }
}

/*# sourceMappingURL=data-grid.css.map */